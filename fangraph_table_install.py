from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, Session
import csv
import io
import baseball_player_model
import os
import codecs


def parse_csv_file(filename, operation_session):
    with codecs.open(filename, 'r', encoding='utf-8-sig') as f:
        batter_csv = csv.DictReader(f)

        for row in batter_csv:
            try:
                batter = baseball_player_model.Batter(playerid=row['playerid'].strip(),
                                                      Year=row['Season'].strip(),
                                                      Name=row['Name'].strip(),
                                                      Team=row['Team'].strip() or 0,
                                                      Age=row['Age'].strip() or 0,
                                                      G=row['G'].strip() or 0,
                                                      AB=row['AB'].strip() or 0,
                                                      PA=row['PA'].strip() or 0,
                                                      H=row['H'].strip() or 0,
                                                      Single_Bat=row['1B'].strip() or 0,
                                                      Double_Bat=row['2B'].strip() or 0,
                                                      Triple_Bat=row['3B'].strip() or 0,
                                                      HR=row['HR'].strip() or 0,
                                                      R=row['R'].strip() or 0,
                                                      RBI=row['RBI'].strip() or 0,
                                                      BB=row['BB'].strip() or 0,
                                                      IBB=row['IBB'].strip() or 0,
                                                      SO=row['SO'].strip() or 0,
                                                      HBP=row['HBP'].strip() or 0,
                                                      SF=row['SF'].strip() or 0,
                                                      SH=row['SH'].strip() or 0,
                                                      GDP=row['GDP'].strip() or 0,
                                                      SB=row['SB'].strip() or 0,
                                                      CS=row['CS'].strip() or 0,
                                                      AVG=row['AVG'].strip() or 0,
                                                      GB=row['GB'].strip() or 0,
                                                      FB=row['FB'].strip() or 0,
                                                      LD=row['LD'].strip() or 0,
                                                      IFFB=row['IFFB'].strip() or 0,
                                                      Pitches=row['Pitches'].strip() or 0,
                                                      Balls=row['Balls'].strip() or 0,
                                                      Strikes=row['Strikes'].strip() or 0,
                                                      IFH=row['IFH'].strip() or 0,
                                                      BU=row['BU'].strip() or 0,
                                                      BUH=row['BUH'].strip() or 0,
                                                      BB_Percentage=row['BB%'].rstrip('%').strip() or 0,
                                                      K_Percentage=row['K%'].rstrip('%').strip() or 0,
                                                      BB_Divided_By_K=row['BB/K'].strip() or 0,
                                                      OBP=row['OBP'].strip() or 0,
                                                      SLG=row['SLG'].strip() or 0,
                                                      OPS=row['OPS'].strip() or 0,
                                                      ISO=row['ISO'].strip() or 0,
                                                      BABIP=row['BABIP'].strip() or 0,
                                                      GB_Divided_By_FB=row['GB/FB'].strip() or 0,
                                                      LD_Percentage=row['LD%'].rstrip('%').strip() or 0,
                                                      GB_Percentage=row['GB%'].rstrip('%').strip() or 0,
                                                      FB_Percentage=row['FB%'].rstrip('%').strip() or 0,
                                                      IFFB_Percentage=row['IFFB%'].rstrip('%').strip() or 0,
                                                      HR_Divided_By_FB=row['HR/FB'].rstrip('%').strip() or 0,
                                                      IFH_Percentage=row['IFH%'].rstrip('%').strip() or 0,
                                                      BUH_Percentage=row['BUH%'].rstrip('%').strip() or 0,
                                                      wOBA=row['wOBA'].strip() or 0,
                                                      wRAA=row['wRAA'].strip() or 0,
                                                      wRC=row['wRC'].strip() or 0,
                                                      Bat=row['Bat'].strip() or 0,
                                                      Fld=row['Fld'].strip() or 0,
                                                      Rep=row['Rep'].strip() or 0,
                                                      Pos=row['Pos'].strip() or 0,
                                                      RAR=row['RAR'].strip() or 0,
                                                      WAR=row['WAR'].strip() or 0,
                                                      Dol=row['Dol'].lstrip('($').rstrip(')').strip() or 0,
                                                      Spd=row['Spd'].strip() or 0,
                                                      wRC_Plus=row['wRC+'].strip() or 0,
                                                      WPA=row['WPA'].strip() or 0,
                                                      Minus_WPA=row['-WPA'].strip() or 0,
                                                      Plus_WPA=row['+WPA'].strip() or 0,
                                                      RE24=row['RE24'].strip() or 0,
                                                      REW=row['REW'].strip() or 0,
                                                      pLI=row['-WPA'].strip() or 0,
                                                      phLI=row['phLI'].strip() or 0,
                                                      PH=row['PH'].strip() or 0,
                                                      WPA_Divided_By_LI=row['WPA/LI'].strip() or 0,
                                                      Clutch=row['Clutch'].strip() or 0,
                                                      FBv=row['FBv'].strip() or 0,
                                                      SL_Percentage=row['SL%'].rstrip('%').strip() or 0,
                                                      SLv=row['SLv'].strip() or 0,
                                                      CT_Percentage=row['CT%'].rstrip('%').strip() or 0,
                                                      CTv=row['CTv'].strip() or 0,
                                                      CB_Percentage=row['CB%'].rstrip('%').strip() or 0,
                                                      CBv=row['CBv'].strip() or 0,
                                                      CH_Percentage=row['CH%'].rstrip('%').strip() or 0,
                                                      CHv=row['CHv'].strip() or 0,
                                                      SF_Percentage=row['SF%'].rstrip('%').strip() or 0,
                                                      SFv=row['SFv'].strip() or 0,
                                                      KN_Percentage=row['KN%'].rstrip('%').strip() or 0,
                                                      KNv=row['KNv'].strip() or 0,
                                                      XX_Percentage=row['XX%'].rstrip('%').strip() or 0,
                                                      PO_Percentage=row['PO%'].rstrip('%').strip() or 0,
                                                      wFB=row['wFB'].strip() or 0,
                                                      wSL=row['wSL'].strip() or 0,
                                                      wCT=row['wCT'].strip() or 0,
                                                      wCB=row['wCB'].strip() or 0,
                                                      wCH=row['wCH'].strip() or 0,
                                                      wSF=row['wSF'].strip() or 0,
                                                      wKN=row['wKN'].strip() or 0,
                                                      wFB_Divided_By_C=row['wFB/C'].strip() or 0,
                                                      wSL_Divided_By_C=row['wSL/C'].strip() or 0,
                                                      wCT_Divided_By_C=row['wCT/C'].strip() or 0,
                                                      wCB_Divided_By_C=row['wCB/C'].strip() or 0,
                                                      wCH_Divided_By_C=row['wCH/C'].strip() or 0,
                                                      wSF_Divided_By_C=row['wSF/C'].strip() or 0,
                                                      wKN_Divided_By_C=row['wKN/C'].strip() or 0,
                                                      O_Swing_Percentage=row['O-Swing%'].rstrip('%').strip() or 0,
                                                      Z_Swing_Percentage=row['Z-Swing%'].rstrip('%').strip() or 0,
                                                      Swing_Percentage=row['Swing%'].rstrip('%').strip() or 0,
                                                      O_Contact_Percentage=row['O-Contact%'].rstrip('%').strip() or 0,
                                                      Z_Contact_Percentage=row['Z-Contact%'].rstrip('%').strip() or 0,
                                                      Contact_Percentage=row['Contact%'].rstrip('%').strip() or 0,
                                                      Zone_Percentage=row['Zone%'].rstrip('%').strip() or 0,
                                                      F_Strike_Percentage=row['F-Strike%'].rstrip('%').strip() or 0,
                                                      SwStr_Percentage=row['SwStr%'].rstrip('%').strip() or 0,
                                                      BsR=row['BsR'].strip() or 0,
                                                      FA_Percentage_pfx=row['FA% (pfx)'].rstrip('%').strip() or 0,
                                                      FT_Percentage_pfx=row['FT% (pfx)'].rstrip('%').strip() or 0,
                                                      FC_Percentage_pfx=row['FC% (pfx)'].rstrip('%').strip() or 0,
                                                      FS_Percentage_pfx=row['FS% (pfx)'].rstrip('%').strip() or 0,
                                                      FO_Percentage_pfx=row['FO% (pfx)'].rstrip('%').strip() or 0,
                                                      SI_Percentage_pfx=row['SI% (pfx)'].rstrip('%').strip() or 0,
                                                      SL_Percentage_pfx=row['SL% (pfx)'].rstrip('%').strip() or 0,
                                                      CU_Percentage_pfx=row['CU% (pfx)'].rstrip('%').strip() or 0,
                                                      KC_Percentage_pfx=row['KC% (pfx)'].rstrip('%').strip() or 0,
                                                      EP_Percentage_pfx=row['EP% (pfx)'].rstrip('%').strip() or 0,
                                                      CH_Percentage_pfx=row['CH% (pfx)'].rstrip('%').strip() or 0,
                                                      SC_Percentage_pfx=row['SC% (pfx)'].rstrip('%').strip() or 0,
                                                      KN_Percentage_pfx=row['KN% (pfx)'].rstrip('%').strip() or 0,
                                                      UN_Percentage_pfx=row['UN% (pfx)'].rstrip('%').strip() or 0,
                                                      vFA_pfx=row['vFA (pfx)'].strip() or 0,
                                                      vFT_pfx=row['vFT (pfx)'].strip() or 0,
                                                      vFC_pfx=row['vFC (pfx)'].strip() or 0,
                                                      vFS_pfx=row['vFS (pfx)'].strip() or 0,
                                                      vFO_pfx=row['vFO (pfx)'].strip() or 0,
                                                      vSI_pfx=row['vSI (pfx)'].strip() or 0,
                                                      vSL_pfx=row['vSL (pfx)'].strip() or 0,
                                                      vCU_pfx=row['vCU (pfx)'].strip() or 0,
                                                      vKC_pfx=row['vKC (pfx)'].strip() or 0,
                                                      vEP_pfx=row['vEP (pfx)'].strip() or 0,
                                                      vCH_pfx=row['vCH (pfx)'].strip() or 0,
                                                      vSC_pfx=row['vSC (pfx)'].strip() or 0,
                                                      vKN_pfx=row['vKN (pfx)'].strip() or 0,
                                                      FA_X_pfx=row['FA-X (pfx)'].strip() or 0,
                                                      FT_X_pfx=row['FT-X (pfx)'].strip() or 0,
                                                      FC_X_pfx=row['FC-X (pfx)'].strip() or 0,
                                                      FS_X_pfx=row['FS-X (pfx)'].strip() or 0,
                                                      FO_X_pfx=row['FO-X (pfx)'].strip() or 0,
                                                      SI_X_pfx=row['SI-X (pfx)'].strip() or 0,
                                                      SL_X_pfx=row['SL-X (pfx)'].strip() or 0,
                                                      CU_X_pfx=row['CU-X (pfx)'].strip() or 0,
                                                      KC_X_pfx=row['KC-X (pfx)'].strip() or 0,
                                                      EP_X_pfx=row['EP-X (pfx)'].strip() or 0,
                                                      CH_X_pfx=row['CH-X (pfx)'].strip() or 0,
                                                      SC_X_pfx=row['SC-X (pfx)'].strip() or 0,
                                                      KN_X_pfx=row['KN-X (pfx)'].strip() or 0,
                                                      FA_Z_pfx=row['FA-Z (pfx)'].strip() or 0,
                                                      FT_Z_pfx=row['FT-Z (pfx)'].strip() or 0,
                                                      FC_Z_pfx=row['FC-Z (pfx)'].strip() or 0,
                                                      FS_Z_pfx=row['FS-Z (pfx)'].strip() or 0,
                                                      FO_Z_pfx=row['FO-Z (pfx)'].strip() or 0,
                                                      SI_Z_pfx=row['SI-Z (pfx)'].strip() or 0,
                                                      SL_Z_pfx=row['SL-Z (pfx)'].strip() or 0,
                                                      CU_Z_pfx=row['CU-Z (pfx)'].strip() or 0,
                                                      KC_Z_pfx=row['KC-Z (pfx)'].strip() or 0,
                                                      EP_Z_pfx=row['EP-Z (pfx)'].strip() or 0,
                                                      CH_Z_pfx=row['CH-Z (pfx)'].strip() or 0,
                                                      SC_Z_pfx=row['SC-Z (pfx)'].strip() or 0,
                                                      KN_Z_pfx=row['KN-Z (pfx)'].strip() or 0,
                                                      wFA_pfx=row['wFA (pfx)'].strip() or 0,
                                                      wFT_pfx=row['wFT (pfx)'].strip() or 0,
                                                      wFC_pfx=row['wFC (pfx)'].strip() or 0,
                                                      wFS_pfx=row['wFS (pfx)'].strip() or 0,
                                                      wFO_pfx=row['wFO (pfx)'].strip() or 0,
                                                      wSI_pfx=row['wSI (pfx)'].strip() or 0,
                                                      wSL_pfx=row['wSL (pfx)'].strip() or 0,
                                                      wCU_pfx=row['wCU (pfx)'].strip() or 0,
                                                      wKC_pfx=row['wKC (pfx)'].strip() or 0,
                                                      wEP_pfx=row['wEP (pfx)'].strip() or 0,
                                                      wCH_pfx=row['wCH (pfx)'].strip() or 0,
                                                      wSC_pfx=row['wSC (pfx)'].strip() or 0,
                                                      wKN_pfx=row['wKN (pfx)'].strip() or 0,
                                                      wFA_Divided_By_C_pfx=row['wFA/C (pfx)'].strip() or 0,
                                                      wFT_Divided_By_C_pfx=row['wFT/C (pfx)'].strip() or 0,
                                                      wFC_Divided_By_C_pfx=row['wFC/C (pfx)'].strip() or 0,
                                                      wFS_Divided_By_C_pfx=row['wFS/C (pfx)'].strip() or 0,
                                                      wFO_Divided_By_C_pfx=row['wFO/C (pfx)'].strip() or 0,
                                                      wSI_Divided_By_C_pfx=row['wSI/C (pfx)'].strip() or 0,
                                                      wSL_Divided_By_C_pfx=row['wSL/C (pfx)'].strip() or 0,
                                                      wCU_Divided_By_C_pfx=row['wCU/C (pfx)'].strip() or 0,
                                                      wKC_Divided_By_C_pfx=row['wKC/C (pfx)'].strip() or 0,
                                                      wEP_Divided_By_C_pfx=row['wEP/C (pfx)'].strip() or 0,
                                                      wCH_Divided_By_C_pfx=row['wCH/C (pfx)'].strip() or 0,
                                                      wSC_Divided_By_C_pfx=row['wSC/C (pfx)'].strip() or 0,
                                                      wKN_Divided_By_C_pfx=row['wKN/C (pfx)'].strip() or 0,
                                                      O_Swing_Percentage_pfx=row['O-Swing% (pfx)'].rstrip(
                                                          '%').strip() or 0,
                                                      Z_Swing_Percentage_pfx=row['Z-Swing% (pfx)'].rstrip(
                                                          '%').strip() or 0,
                                                      Swing_Percentage_pfx=row['Swing% (pfx)'].rstrip('%').strip() or 0,
                                                      O_Contact_Percentage_pfx=row['O-Contact% (pfx)'].rstrip(
                                                          '%').strip() or 0,
                                                      Z_Contact_Percentage_pfx=row['Z-Contact% (pfx)'].rstrip(
                                                          '%').strip() or 0,
                                                      Contact_Percentage_pfx=row['Contact% (pfx)'].rstrip(
                                                          '%').strip() or 0,
                                                      Zone_Percentage_pfx=row['Zone% (pfx)'].rstrip('%').strip() or 0,
                                                      Pace=row['Pace'].strip() or 0,
                                                      Def=row['Def'].strip() or 0,
                                                      wSB=row['wSB'].strip() or 0,
                                                      UBR=row['UBR'].strip() or 0,
                                                      Age_Rng=row['Age Rng'].strip() or 0,
                                                      Off=row['Off'].strip() or 0,
                                                      Lg=row['Lg'].strip() or 0,
                                                      wGDP=row['wGDP'].strip() or 0,
                                                      Pull_Percentage=row['Pull%'].rstrip('%').strip() or 0,
                                                      Cent_Percentage=row['Cent%'].rstrip('%').strip() or 0,
                                                      Oppo_Percentage=row['Oppo%'].rstrip('%').strip() or 0,
                                                      Soft_Percentage=row['Soft%'].rstrip('%').strip() or 0,
                                                      Med_Percentage=row['Med%'].rstrip('%').strip() or 0,
                                                      Hard_Percentage=row['Hard%'].rstrip('%').strip() or 0)
            except Exception as e:
                print e
                print row['playerid'].strip()
            operation_session.add(batter)


if __name__ == '__main__':
    engine = create_engine('postgresql://localhost:5432/test')

    session = sessionmaker()
    session.configure(bind=engine)
    baseball_player_model.Batter.metadata.drop_all(engine)
    baseball_player_model.Batter.metadata.create_all(engine)

    operation_session = Session(engine)

    hitter_folder_name = "fangraph_hitter"

    hitter_files = [f for f in os.listdir(hitter_folder_name) if
                    os.path.isfile(os.path.join(hitter_folder_name, f))]

    for hitter_file in hitter_files:
        parse_csv_file(os.path.join(hitter_folder_name, hitter_file), operation_session)

    operation_session.commit()
    operation_session.close()
